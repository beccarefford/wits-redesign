<?php
/**
 *
 * WARNING: Please do not edit this file.
 * @see http://codex.wordpress.org/Child_Themes
 *
 * Load the theme function files (options panel, theme functions, widgets, etc...).
 */

include_once get_template_directory() . '/theme/class-symphony.php'; // Symphony Class (main functionality, actions/filters)
include_once get_template_directory() . '/theme/class-symphony-customizer.php'; // Symphony Customizer Class (specific to the customizer)

include_once get_template_directory() . '/includes/class-tgm-plugin-activation.php'; // TGM Activation

include_once get_template_directory() . '/includes/theme-options.php'; // SDS Theme Options
include_once get_template_directory() . '/includes/theme-functions.php'; // SDS Theme Options Functions
include_once get_template_directory() . '/includes/widget-social-media.php'; // SDS Social Media Widget=

// Theme Updates
if ( ! class_exists( 'EDD_SL_Theme_Updater' ) )
	include_once get_template_directory() . '/includes/class-edd-sl-theme-updater.php';

/**
 * This function registers all content layouts available in this theme.
 */
if ( ! function_exists( 'sds_content_layouts' ) ) {
	function sds_content_layouts() {
		$content_layouts = array(
			'default' => array( // Name used in saved option
				'label' => __( 'Default', 'symphony' ), // Label on options panel (required)
				'preview' => '<div class="cols cols-1 cols-default"><div class="col col-content" title="%1$s"><span class="label">%1$s</span></div></div>', // Preview on options panel (required; %1$s is replaced with values below on options panel if specified)
				'preview_values' => array( __( 'Default', 'symphony' ) ),
				'default' => true
			),
			'cols-1' => array( // Full Width
				'label' => __( 'Full Width', 'symphony' ),
				'preview' => '<div class="cols cols-1"><div class="col col-content"></div></div>',
			),
			'cols-2' => array( // Content Left, Primary Sidebar Right
				'label' => __( 'Content Left', 'symphony' ),
				'preview' => '<div class="cols cols-2"><div class="col col-content"></div><div class="col col-sidebar"></div></div>'
			),
			'cols-2-r' => array( // Content Right, Primary Sidebar Left
				'label' => __( 'Content Right', 'symphony' ),
				'preview' => '<div class="cols cols-2 cols-2-r"><div class="col col-sidebar"></div><div class="col col-content"></div></div>'
			),
			'cols-3' => array( // Content Left, Primary Sidebar Middle, Secondary Sidebar Right
				'label' => __( 'Content, Sidebar, Sidebar', 'symphony' ),
				'preview' => '<div class="cols-3"><div class="col col-content"></div><div class="col col-sidebar"></div><div class="col col-sidebar col-sidebar-secondary"></div></div>'
			),
			'cols-3-m' => array( // Primary Sidebar Left, Content Middle, Secondary Sidebar Right
				'label' => __( 'Sidebar, Content, Sidebar', 'symphony' ),
				'preview' => '<div class="cols cols-3 cols-3-m"><div class="col col-sidebar"></div><div class="col col-content"></div><div class="col col-sidebar col-sidebar-secondary"></div></div>'
			),
			'cols-3-r' => array( // Primary Sidebar Left, Secondary Sidebar Middle, Content Right
				'label' => __( 'Sidebar, Sidebar, Content', 'symphony' ),
				'preview' => '<div class="cols cols-3 cols-3-r"><div class="col col-sidebar"></div><div class="col col-sidebar col-sidebar-secondary"></div><div class="col col-content"></div></div>'
			)
		);

		return apply_filters( 'sds_theme_options_content_layouts', $content_layouts );
	}
}

/**
 * This function modifies the global $content_width value based on content layout or page template settings.
 */
if ( ! function_exists( 'symphony_body_class' ) ) {
	add_filter( 'body_class', 'symphony_body_class', 20 );

	function symphony_body_class( $classes ) {
		global $sds_theme_options, $content_width;

		// Symphony Customizer Typography
		$symphony_customizer_typography = Symphony_Customizer_Typography();

		// Content layout was specified by user in Theme Options
		if ( isset( $sds_theme_options['body_class'] ) && ! empty( $sds_theme_options['body_class'] ) ) {
			// 1 Column
			if ( $sds_theme_options['body_class'] === 'cols-1' )
				$content_width = 1600;
			// 3 Columns
			else if ( strpos( $sds_theme_options['body_class'], 'cols-3' ) !== false )
				$content_width = 722;
		}

		// Page Template was specified by the user for this page
		if ( ! empty( $sds_theme_options['page_template'] ) && $sds_theme_options['page_template'] !== 'default' ) {
			// Full Width or Landing Page
			if ( in_array( $sds_theme_options['page_template'], array( 'page-full-width.php', 'page-landing-page.php' ) ) )
				$content_width = 1600;
		}

		// Customizer
		if ( $symphony_customizer_typography->is_customize_preview() )
			$classes['symphony-customizer'] = 'customizer';

		return $classes;
	}
}

/**
 * This function adjusts Theme Option defaults.
 */
if ( ! function_exists( 'sds_theme_options_defaults' ) ) {
	add_filter( 'sds_theme_options_defaults', 'sds_theme_options_defaults' );

	function sds_theme_options_defaults( $defaults ) {
		// Apply the default featured image size filter to the default featured image size value
		$defaults['featured_image_size'] = apply_filters( 'sds_theme_options_default_featured_image_size', '' );

		return $defaults;
	}
}

/**
 * This function sets a default featured image size for use in this theme.
 */
if ( ! function_exists( 'sds_theme_options_default_featured_image_size' ) ) {
	add_filter( 'sds_theme_options_default_featured_image_size', 'sds_theme_options_default_featured_image_size' );

	function sds_theme_options_default_featured_image_size( $default ) {
		return 'symphony-1600x9999';
	}
}

if ( ! function_exists( 'sds_copyright_branding' ) ) {
	add_filter( 'sds_copyright_branding', 'sds_copyright_branding', 10, 2 );

	function sds_copyright_branding( $text, $theme_name ) {
		return '<a href="http://slocumthemes.com/wordpress-themes/symphony/?utm_source=' . esc_url( home_url() ) . '&amp;utm_medium=footer-plugs&amp;utm_campaign=WordPressThemes" target="_blank">' . $theme_name . ' by Slocum Studio</a>';
	}
}

/**
 * This function returns the more link label for Symphony.
 */
function symphony_more_link_label( $return_default_only = false ) {
	// Return default
	if ( $return_default_only )
		return __( 'Continue Reading', 'symphony' );

	// Get theme mod
	$label = get_theme_mod( 'symphony_more_link_label' );

	return ( ! empty( $label ) ) ? $label : __( 'Continue Reading', 'symphony' );
}

/**
 * This function determines if the current theme mods are set to a "fixed width" layout.
 */
function symphony_is_fixed_width() {
	// Return opposite of "symphony_fluid_width" theme mod
	return ! ( bool ) get_theme_mod( 'symphony_fluid_width', true );
}

/**
 * This function determines if the current theme mods are set to a "fluid width" layout.
 */
function symphony_is_fluid_width() {
	return ( bool ) get_theme_mod( 'symphony_fluid_width', true );
}

/*
 * This function determines if Jetpack exists and if the Custom Content Types module is active.
 */
function symphony_jetpack_portfolio_active() {
	return class_exists( 'Jetpack' ) && Jetpack::is_module_active( 'custom-content-types' );
}

/**
 * Filters the blog title tag
 *
 * @param $tag
 *
 * @return string
 */
function sds_logo_filter( $tag ) {
	return 'h1';
}

add_filter( 'sds_logo_wrapper_element', 'sds_logo_filter' );

/**
 * Filters the blog tagline tag
 *
 * @param $tag
 *
 * @return string
 */
function sds_tagline_filter( $tag ) {
	return 'h2';
}

add_filter( 'sds_tagline_wrapper_element', 'sds_tagline_filter' );


/**
 * This function returns the Boolean value of the parameter passed.
 */
if ( ! function_exists( 'symphony_boolval' ) ) {
	function symphony_boolval( $var, $wp_customize_setting = false ) {
		return ( bool ) $var;
	}
}

/**
 * This function displays featured images based on options.
 *
 * @param $link_image, Boolean, link featured image to post.
 *
 * @uses the_permalink()
 * @uses has_post_thumbnail()
 * @uses the_post_thumbnail()
 */

// TODO: Child themes cannot override this function
function sds_featured_image( $link_image = false, $size = false, $wrapper_el = 'figure' ) {
	global $sds_theme_options;

	// Allow size to be over-written by function call
	if ( $size )
		$featured_image_size = $size;
	else {
		$default_featured_image_size = apply_filters( 'sds_theme_options_default_featured_image_size', '' );
		$featured_image_size = ( isset( $sds_theme_options['featured_image_size'] ) && ! empty( $sds_theme_options['featured_image_size'] ) ) ? $sds_theme_options['featured_image_size'] : $default_featured_image_size;
	}

	$featured_image_size = apply_filters( 'sds_featured_image_size', $featured_image_size, $link_image );

	// Featured Image
	if ( has_post_thumbnail() && $link_image ) :
?>
	<<?php echo $wrapper_el; ?> class="post-image <?php echo $featured_image_size . '-featured-image ' . $featured_image_size . '-post-image'; ?>">
		<a href="<?php the_permalink(); ?>">
			<?php the_post_thumbnail( $featured_image_size ); ?>
		</a>
	</<?php echo $wrapper_el; ?>>
<?php
	elseif ( has_post_thumbnail() ) :
?>
	<<?php echo $wrapper_el; ?> class="post-image <?php echo $featured_image_size . '-featured-image ' . $featured_image_size . '-post-image'; ?>">
		<?php the_post_thumbnail( $featured_image_size ); ?>
	</<?php echo $wrapper_el; ?>>
<?php
	endif;
}